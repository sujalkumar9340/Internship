import java.util.*;

class tree
{

//A Binary Tree Node
static class node
{
 int data;
 node left, right;
};

static node newNode(int item)
{
 node temp = new node();
 temp.data = item;
 temp.left = null;
 temp.right = null;
 return temp;
}
static Queue<node> q;

//Utility function to print the left view of
//the binary tree
static void leftViewUtil( node root )
{
 if (root == null)
     return;

 // add root
 q.add(root);

 // Delimiter
 q.add(null);

 while (q.size() > 0)
 {
     node temp = q.peek();

     if (temp != null)
     {

         
         System.out.print(temp.data + " ");

         
         while (q.peek() != null)
         {

             if (temp.left != null)
                 q.add(temp.left);

      
         
             if (temp.right != null)
                 q.add(temp.right);

             // remove the current node
             q.remove();

             temp = q.peek();
         }

         
         q.add(null);
     }

    
     q.remove();
 }
}

static void leftView( node root)
{
 q = new LinkedList<node>();

 leftViewUtil(root);
}

//Driver Code
public static void main(String args[])
{
 node root = newNode(10);
 root.left = newNode(12);
 root.right = newNode(3);
 root.left.right = newNode(4);
 root.right.left = newNode(5);
 root.right.left.right = newNode(6);
 root.right.left.right.left = newNode(18);
 root.right.left.right.right = newNode(7);

 leftView(root);
}
}




